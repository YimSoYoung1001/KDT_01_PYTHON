#---------------------------------------------------------
# range() 내장 함수
# - 숫자의 범위를 생성해주는 함수
# - 반환값/결과값/리턴값 : range 타입
# - 범위에 포함되는 숫자 데이터는 원소/요소라고 함 => 인덱싱
#---------------------------------------------------------
# 1 ~ 20으로 구성된 정수 데이터 생성
nums = range(20)

print(f'nums --> {nums}, {type(nums)}')
print(f'nums --> {nums[0]}, {type(nums[0])}')
print(f'nums --> {nums[-1]}, {type(nums[-1])}')

print(f'nums => {len(nums)}개')   # 0~19니까 20개

# 앞부분 5개 원소까지만 추출 => 슬라이싱
print(f'nums => {nums[0:5]}, {type(nums[0:5])}')
# 범위라는 객체를 만들어주었기 떄문에 output이 range(0,5) 나옴 type도 range

#range ==> list 형 변환하기 => list(데이터)
print(f'list(nums) => {list(nums)}')


# 1~100으로 구성된 정수 리스트 생성해주세요
numsList = list(range(101))
print(f'numsList => {numsList}')

numsList = list(range(1,101))
print(f'numsList => {numsList}')

# ----------------------------------------------------------------------
# range(시작값, 끝값)
# - 시작값 => 기본 : 0           range(10) => 0 <= ~ < 10
# - 시작값 =>       1           range(1,10) => 1 <= ~ < 10
# - 시작값 =>       5           range(5,10) => 5 <= ~ < 10
# ----------------------------------------------------------------------

# 1~30 범위에서 3의 배수만으로 구성된 리스트 생성
# 3,6,9,12,15,18,21,24,27
threes = [3,6,9,12,15,18,21,24,27]

# ----------------------------------------------------------------------
# range(시작값, 끝값, 증감)
# - 시작값 => 기본 : 0  증감 : 1 range(10)       => 0<= ~ <10  0,1,2,...,8,9
# - 시작값 => 기본 : 1, 증감 : 1 range(1,10)     => 1<= ~ <10  1,2,3,,,,,9
# - 시작값 => 기본 : 1, 증갑 : 2 range(1,10,2)   => 1<= ~ <10  1,3,5,7,9
# ----------------------------------------------------------------------

# 1~30 범위에서 3의 배수만으로 구성된 리스트 생성
threes1 = list(range(3,31,3))
print(threes1)

